#!/usr/bin/bash

#
# CC BY-NC-SA 4.0 Deed 
# k_menu, a work by clyde
#

# example usage: 
# $ bash k_menu "rofi -dmenu"
# $ bash k_menu dmenu

menu=$1
test -z $1 && exit 1

main_menu=$(echo -e "continue" | $menu -p "careful: this will display your logins! select any to continue" -lines 0) || exit 1

test -z $kdatabase && {
	source $HOME/.config/k
}

kdatabaseid=$(echo $kdatabase | b2sum | cut -b1-8)-$(basename $kdatabase)

if test ! -e /dev/mapper/$kdatabaseid; then
    st -e k open || { 
        k close
        exit 1
    }
fi

titles=$(k list_menu | awk -F $'\t' '{print $1}')
logins=$(k list_menu | awk -F $'\t' '{print $2}')

entry=$(k list_menu | awk -F $'\t' '{print $1" "$2}' | nl -s '. ' -w 1 | $menu | awk -F '.' '{print $1}')

test -z "$entry" && exit 1

entrytitle=$(echo "$titles" | sed -n ${entry}p)
login=$(echo "$logins" | sed -n ${entry}p)
password=$(k get "$entrytitle" | tail -n1)
totp=$(k totp "$entrytitle")

choice=$(echo -e "login+password\npassword\nlogin\ntotp\nlogin[pause]password" | $menu) || exit 1

{
case $choice in
    "login+password")
        for (( i=0; i<${#login}; i++ )); do
            char="${login:$i:1}"
            xdotool type "$char"
        done
        sleep 0.05
        xdotool key Tab
        sleep 0.05
        for (( i=0; i<${#password}; i++ )); do
            char="${password:$i:1}"
            xdotool type "$char"
        done
        ;;
    "login[pause]password")
        for (( i=0; i<${#login}; i++ )); do
            char="${login:$i:1}"
            xdotool type "$char"
        done
        sleep 0.05
        xdotool key Enter
        echo "wait until done and continue" | $menu || exit 1
        for (( i=0; i<${#password}; i++ )); do
            char="${password:$i:1}"
            xdotool type "$char"
        done
        ;;
    "password")
        for (( i=0; i<${#password}; i++ )); do
            char="${password:$i:1}"
            xdotool type "$char"
        done
        ;;
    "login")
        for (( i=0; i<${#login}; i++ )); do
            char="${login:$i:1}"
            xdotool type "$char"
        done
        ;;
    "totp")
        for (( i=0; i<${#totp}; i++ )); do
            char="${totp:$i:1}"
            xdotool type "$char"
        done
        ;;
esac

notify-send "done typing, you may press enter"

} &


